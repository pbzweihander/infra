apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "outline.fullname" . }}
  labels:
    {{- include "outline.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "outline.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "outline.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "outline.fullname" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: NODE_ENV
          value: production
        - name: SECRET_KEY
          value: {{ .Values.outline.secretKey | quote }}
        - name: UTILS_KEY
          value: {{ .Values.outline.utilsKey | quote }}
        - name: DATABASE_URL
          value: {{ .Values.database.url | quote }}
        - name: PGSSLMODE
          value: disable
        - name: REDIS_URL
          value: redis://{{ .Release.Name }}-redis-master:6379
        - name: URL
          value: {{ .Values.outline.url | quote }}
        - name: PORT
          value: "3000"
        - name: COLLABORATION_URL
          value: ""
        - name: AWS_REGION
          value: {{ .Values.s3.region | quote }}
        - name: AWS_S3_UPLOAD_BUCKET_URL
          value: {{ .Values.s3.uploadBucketUrl | quote }}
        - name: AWS_S3_UPLOAD_BUCKET_NAME
          value: {{ .Values.s3.uploadBucketName | quote }}
        - name: AWS_S3_FORCE_PATH_STYLE
          value: {{ .Values.s3.forcePathStyle | quote }}
        - name: AWS_S3_ACL
          value: private
        - name: FILE_STORAGE
          value: s3
        - name: OIDC_CLIENT_ID
          value: {{ .Values.oidc.clientId | quote }}
        - name: OIDC_CLIENT_SECRET
          value: {{ .Values.oidc.clientSecret | quote }}
        - name: OIDC_AUTH_URI
          value: {{ .Values.oidc.authUri | quote }}
        - name: OIDC_TOKEN_URI
          value: {{ .Values.oidc.tokenUri | quote }}
        - name: OIDC_USERINFO_URI
          value: {{ .Values.oidc.userinfoUri | quote }}
        - name: OIDC_USERNAME_CLAIM
          value: {{ .Values.oidc.usernameClaim | default "preferred_username" | quote }}
        - name: OIDC_DISPLAY_NAME
          value: {{ .Values.oidc.displayName | default "OpenID Connect" | quote }}
        - name: OIDC_SCOPES
          value: {{ .Values.oidc.scopes | default "openid profile email" | quote }}
        - name: SMTP_HOST
          value: {{ .Values.smtp.host | quote }}
        - name: SMTP_PORT
          value: {{ .Values.smtp.port | quote }}
        - name: SMTP_USERNAME
          value: {{ .Values.smtp.username | quote }}
        - name: SMTP_PASSWORD
          value: {{ .Values.smtp.password | quote }}
        - name: SMTP_FROM_EMAIL
          value: {{ .Values.smtp.fromEmail | quote }}
        - name: SMTP_REPLY_EMAIL
          value: {{ .Values.smtp.replyEmail | quote }}
        - name: SMTP_TLS_CIPHERS
          value: {{ .Values.smtp.tlsCiphers | quote }}
        - name: SMTP_SECURE
          value: {{ .Values.smtp.secure | quote }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: http
        readinessProbe:
          httpGet:
            path: /
            port: http
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            {{- include "misskey.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: web
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            {{- include "misskey.selectorLabels" . | nindent 12 }}
            app.kubernetes.io/component: web
